{
  "config": {
    "title": "Rambdax",
    "description": "Lightweight alternative to Ramda - extended version",
    "menu": [],
    "version": "2.8.1",
    "repository": "https://github.com/selfrefactor/rambdax",
    "native": false,
    "codeSandbox": true,
    "themeConfig": {},
    "separator": "-"
  },
  "props": [],
  "entries": [
    {
      "key": "files/CodeStyle.md",
      "value": {
        "id": "428930524154ebecfe0bef7c73632ad1",
        "filepath": "files/CodeStyle.md",
        "link": "https://github.com/selfrefactor/rambdax/edit/master/files/CodeStyle.md",
        "slug": "files-code-style",
        "route": "/files-code-style",
        "name": "Code style",
        "menu": "",
        "headings": [
          {
            "slug": "code-style",
            "depth": 1,
            "value": "Code style"
          },
          {
            "slug": "theme-folder-naming-pattern",
            "depth": 2,
            "value": "{{theme}}  folder naming pattern"
          },
          {
            "slug": "input-pattern",
            "depth": 2,
            "value": "input*  pattern"
          },
          {
            "slug": "x-pattern",
            "depth": 2,
            "value": "*x  pattern"
          },
          {
            "slug": "ok-pattern",
            "depth": 2,
            "value": "ok*  pattern"
          },
          {
            "slug": "maybe-pattern",
            "depth": 2,
            "value": "Maybe pattern"
          },
          {
            "slug": "line-breaks-as-chinese-fast-food",
            "depth": 2,
            "value": "Line breaks as Chinese fast food"
          },
          {
            "slug": "rules",
            "depth": 2,
            "value": "Rules"
          },
          {
            "slug": "comments",
            "depth": 2,
            "value": "Comments"
          },
          {
            "slug": "empty-lines",
            "depth": 2,
            "value": "Empty lines"
          },
          {
            "slug": "ifelse",
            "depth": 3,
            "value": "if/else"
          },
          {
            "slug": "inside-files",
            "depth": 3,
            "value": "Inside files"
          },
          {
            "slug": "inside-functions",
            "depth": 3,
            "value": "Inside functions"
          },
          {
            "slug": "code-style-1",
            "depth": 2,
            "value": "Code style"
          },
          {
            "slug": "line-length",
            "depth": 4,
            "value": "Line length"
          },
          {
            "slug": "class-names",
            "depth": 4,
            "value": "Class-names"
          },
          {
            "slug": "prefer-exlicit-over-generic-naming",
            "depth": 4,
            "value": "Prefer exlicit over generic naming"
          },
          {
            "slug": "testing",
            "depth": 2,
            "value": "Testing"
          },
          {
            "slug": "end-to-end-testing",
            "depth": 3,
            "value": "End-to-end testing"
          }
        ]
      }
    },
    {
      "key": "files/isValid.md",
      "value": {
        "id": "61bd2a5bfe86a9d5b82b2642382908c3",
        "filepath": "files/isValid.md",
        "link": "https://github.com/selfrefactor/rambdax/edit/master/files/isValid.md",
        "slug": "files-is-valid",
        "route": "/files-is-valid",
        "name": "Is valid",
        "menu": "",
        "headings": [
          {
            "slug": "risvalid-explained",
            "depth": 1,
            "value": "R.isValid explained"
          },
          {
            "slug": "api",
            "depth": 2,
            "value": "API"
          },
          {
            "slug": "optional-requirements",
            "depth": 2,
            "value": "Optional requirements"
          },
          {
            "slug": "valid-schema-declarations",
            "depth": 2,
            "value": "Valid schema declarations"
          },
          {
            "slug": "evaluation-function",
            "depth": 3,
            "value": "Evaluation function"
          },
          {
            "slug": "function",
            "depth": 3,
            "value": "Function"
          },
          {
            "slug": "prototype",
            "depth": 3,
            "value": "Prototype"
          },
          {
            "slug": "string",
            "depth": 3,
            "value": "String"
          },
          {
            "slug": "number",
            "depth": 3,
            "value": "Number"
          },
          {
            "slug": "boolean",
            "depth": 3,
            "value": "Boolean"
          },
          {
            "slug": "any",
            "depth": 3,
            "value": "Any"
          },
          {
            "slug": "array",
            "depth": 3,
            "value": "Array"
          },
          {
            "slug": "array-of-specific-type",
            "depth": 3,
            "value": "Array of specific type"
          },
          {
            "slug": "regular-expresion",
            "depth": 3,
            "value": "Regular expresion"
          },
          {
            "slug": "enumerable",
            "depth": 3,
            "value": "Enumerable"
          },
          {
            "slug": "schema",
            "depth": 3,
            "value": "Schema"
          },
          {
            "slug": "array-of-schema",
            "depth": 3,
            "value": "Array of schema"
          },
          {
            "slug": "detailed-example",
            "depth": 2,
            "value": "Detailed example"
          }
        ]
      }
    },
    {
      "key": "files/examples/CreateDocs.md",
      "value": {
        "id": "3dbcc0487c1f5d6e8244b3fa8c126c7d",
        "filepath": "files/examples/CreateDocs.md",
        "link": "https://github.com/selfrefactor/rambdax/edit/master/files/examples/CreateDocs.md",
        "slug": "files-examples-create-docs",
        "route": "/files-examples-create-docs",
        "name": "Create docs",
        "menu": "",
        "headings": [
          {
            "slug": "create-documentation-files-with-composeasync-and-mapasync",
            "depth": 1,
            "value": "Create documentation files with composeAsync and mapAsync"
          },
          {
            "slug": "the-task",
            "depth": 2,
            "value": "The task"
          },
          {
            "slug": "the-tools",
            "depth": 2,
            "value": "The tools"
          },
          {
            "slug": "the-solution",
            "depth": 2,
            "value": "The solution"
          }
        ]
      }
    },
    {
      "key": "files/examples/PartialCurry.md",
      "value": {
        "id": "1fd606dfadde58c0948b49a833fb4550",
        "filepath": "files/examples/PartialCurry.md",
        "link": "https://github.com/selfrefactor/rambdax/edit/master/files/examples/PartialCurry.md",
        "slug": "files-examples-partial-curry",
        "route": "/files-examples-partial-curry",
        "name": "Partial curry",
        "menu": "",
        "headings": [
          {
            "slug": "using-rpartialcurry-with-headless-chrome",
            "depth": 1,
            "value": "Using R.partialCurry with headless Chrome"
          }
        ]
      }
    },
    {
      "key": "files/examples/PromiseAllChunks.md",
      "value": {
        "id": "ecd792f18a51b59ca32b073dc82f8a49",
        "filepath": "files/examples/PromiseAllChunks.md",
        "link": "https://github.com/selfrefactor/rambdax/edit/master/files/examples/PromiseAllChunks.md",
        "slug": "files-examples-promise-all-chunks",
        "route": "/files-examples-promise-all-chunks",
        "name": "Promise all chunks",
        "menu": "",
        "headings": [
          {
            "slug": "promiseall-with-chunks-of-promises",
            "depth": 1,
            "value": "Promise.all with chunks of promises"
          }
        ]
      }
    },
    {
      "key": "files/examples/RandomImageName.md",
      "value": {
        "id": "314c35ec78ef1f72c5caefca0bb33495",
        "filepath": "files/examples/RandomImageName.md",
        "link": "https://github.com/selfrefactor/rambdax/edit/master/files/examples/RandomImageName.md",
        "slug": "files-examples-random-image-name",
        "route": "/files-examples-random-image-name",
        "name": "Random image name",
        "menu": "",
        "headings": [
          {
            "slug": "create-random-png-file-name",
            "depth": 1,
            "value": "Create random PNG file name"
          }
        ]
      }
    }
  ]
}
